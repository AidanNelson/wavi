{"version":3,"sources":["../../src/utils/parsersHelper.js"],"names":["_","require","path","async","parsersHelper","module","exports","counter","getFirstDefinedArray","AST","list","Defined","candidate","each","filter","currentFilter","split","isUndefined","n","length","getCount","counterName","findFirstExistingAttr","elem","attrs","name","attr","correctPathSync","filePath","parent","folder","substring","mixedPath","normalize","replace","slice","getLeftName","node","getLeftNameB","type","property","value","object","getAlias","result","left","push","right","reduceLength","maxLength","substr","removeSpecialChar","str","getPrototypeVar","LeftName","LeftNameArr","flag","key","token","join","getParams","params","rawValue","param","getAjaxUrl","properties","cb","url","cbRel","temp","rootParent"],"mappings":"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","file":"parsersHelper.js","sourcesContent":["var _ = require('underscore')._,\n        path = require('path');\nvar async = require(\"async\");\n\nvar parsersHelper = module.exports = {\n        counter: {},\n        getFirstDefinedArray: function (AST, list) {\n                var Defined = \"\";\n                var candidate = null;\n                _.each(list, function (filter) {\n                        var currentFilter = filter.split(\".\");\n                        if (!_.isUndefined(AST[currentFilter[0]])) {\n                                candidate = AST[currentFilter[0]];\n                        }\n                        else {\n                                return false;\n                        }\n                        var n = 1;\n                        if (currentFilter.length > 1) {\n                                while (n !== currentFilter.length) {\n                                        if (!_.isUndefined(candidate[currentFilter[n]])) {\n                                                candidate = candidate[currentFilter[n]];\n                                        }\n                                        else {\n                                                break;\n                                        }\n                                        n++;\n                                }\n                        }\n                        if (n == currentFilter.length) {\n                                Defined = candidate;\n                        }\n                });\n                return Defined;\n        },\n        getCount: function (counterName) {\n                if (_.isUndefined(parsersHelper.counter[counterName])) {\n                        parsersHelper.counter[counterName] = 1;\n                }\n                else {\n                        parsersHelper.counter[counterName]++;\n                }\n                return counterName + \">\" + parsersHelper.counter[counterName];\n        },\n        findFirstExistingAttr: function (elem, attrs) {\n                var name = \"\";\n                _.each(attrs, function (attr) {\n                        if (!_.isUndefined(elem.attr(attr))) {\n                                name = elem.attr(attr);\n                                return;\n                        }\n                });\n                return name;\n        },\n        correctPathSync: function (filePath, parent) {\n                if (parent.folder === null || _.isUndefined(filePath) || _.isUndefined(parent.folder) || (filePath.substring(0, 7) == \"mailto:\") || (filePath.substring(0, 7) == \"http://\") || (filePath.substring(0, 8) == \"https://\")) {\n                        return filePath;\n                }\n                else if (filePath === \"..\") {\n\n                        var mixedPath = path.normalize(parent.folder + \"../index.js\");\n                        mixedPath = mixedPath.replace(/\\\\/g, \"\\/\").replace(\"//\", \"/\");\n\n\n                        return mixedPath;\n                }\n                else if (filePath.slice(-3) === \"/..\") {\n\n                        filePath = filePath + \"/index.js\";\n                        var mixedPath = path.normalize(parent.folder + \"/\" + filePath);\n                        mixedPath = mixedPath.replace(/\\\\/g, \"\\/\").replace(\"//\", \"/\");\n\n\n                        return mixedPath;\n\n                }\n                else {\n                        var mixedPath = path.normalize(parent.folder + \"/\" + filePath);\n                        mixedPath = mixedPath.replace(/\\\\/g, \"\\/\").replace(\"//\", \"/\");\n                        return mixedPath;\n                }\n        },\n        getLeftName: function (node) {\n                let name;\n                function getLeftNameB(name, node) {\n\n\n                        if (node.type === \"Identifier\") {\n                                var name = node.name + \".\" + name;\n                        }\n                        else if (node.type === \"ThisExpression\") {\n                                var name = name;\n                        }\n                        else if (node.type === \"BinaryExpression\") {\n                                var name = \"\";\n                        }\n                        else if (_.isUndefined(node.property)) {\n                                var name = node.name + \".\" + name;\n                        }\n                        else if (node.property.type === \"Literal\") {\n                                var name = \"[\" + node.property.value + \"]\" + \".\" + name;\n                        }\n                        else {\n\n\n                                var name = node.property.name + \".\" + name;\n                        }\n\n\n                        if (node.object) {\n                                return getLeftNameB(name, node.object);\n                        }\n\n\n                        if (name.slice(-4) === \"[?].\") {\n                                name = name.slice(0, -1);\n                        }\n\n                        return name.replace('undefined.', '');\n                }\n\n\n                if (node.object && node.object.type === \"BinaryExpression\") {\n\n                        if (node.property.type === \"Identifier\") {\n                                return node.property.name;\n                        }\n                        else {\n                                return name;\n                        }\n                }\n\n                if (node.object) {\n                        if (node.property.type !== \"Identifier\" || _.isUndefined(node.property.name)) {\n                                return getLeftNameB(\"[?].\", node.object);\n                        }\n                        else {\n                                return getLeftNameB(node.property.name, node.object);\n                        }\n                }\n\n                return name;\n        },\n        getAlias: function (result, node) {\n\n\n                var result = { name: [], value: \"\" };\n\n                function getLeftNameB(result, node) {\n\n                        if (node.left) {\n\n                                if (node.left.type === \"Identifier\") {\n                                        result.name.push(node.left.name);\n                                }\n\n\n                        }\n                        if (node.right) {\n                                return getLeftNameB(result, node.right);\n                        }\n                        else {\n                                result.value = node;\n                                return result;\n                        }\n\n\n\n\n                }\n\n                if (node.right) {\n                        return getLeftNameB(result, node);\n                }\n\n                return result;\n        },\n        reduceLength: function (name, maxLength) {\n                if (typeof name == \"string\" && name.length > maxLength) {\n                        return name.substr(0, maxLength) + \"...\";\n\n                }\n                else {\n                        return name;\n                }\n        },\n        removeSpecialChar: function (str) {\n                if (str !== null && typeof str === \"string\" && !_.isUndefined(str)) {\n                        str = str.replace(/\\\\n/g, \"\\\\n\")\n                                .replace(/\\\\'/g, \"\\\\'\")\n                                .replace(/\\\\l/g, \"\\\\n\")\n                                .replace(/\\\\\"/g, '\\\\\"')\n                                .replace(/\\\\&/g, \"\\\\&\")\n                                .replace(/\\\\r/g, \"\\\\r\")\n                                .replace(/\\\\t/g, \"\\\\t\")\n                                .replace(/\\\\b/g, \"\\\\b\")\n                                .replace(/\\\\f/g, \"\\\\f\")\n                                .replace(/\\\\\\//g, \"/\")\n                                .replace(\".prototype.\", \".\")\n\n                                .replace(/([^\\x00-\\xFF]|\\s)*$/g, '')\n                                .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n                                .replace(/[`~!@#$%^&*()_|=?;'\"\\{\\}<>\\\\\\/]/gi, '')\n                                .replace(\"[]\", \"[?]\")\n                        // \n                        //.replace(/\\W/g, '');\n                }\n                return str;\n        },\n        getPrototypeVar: function (LeftName) {\n                var LeftNameArr = LeftName.split(\".\");\n\n                var flag = 0;\n                var key = [];\n                var name = [];\n                _.each(LeftNameArr, function (token) {\n                        if (token === \"prototype\") {\n                                flag = 1;\n                        }\n                        else {\n                                if (flag === 0) {\n                                        key.push(token);\n                                }\n                                else {\n                                        name.push(token);\n                                }\n                        }\n                });\n                return [key.join(\".\"), name.join(\".\")];\n        },\n        getParams: function (params) {\n                var rawValue = [];\n                _.each(params, function (param) {\n                        if (param.type === \"Identifier\" && !_.isUndefined(param.name)) {\n                                rawValue.push(param.name);\n                        }\n                });\n\n                if (rawValue.length > 0) {\n                        return rawValue.join(\", \");\n                }\n                else {\n                        return \"\";\n                }\n        },\n        getAjaxUrl: function (properties, node, cb) {\n                var url = null;\n                async.each(properties, function (property, cbRel) {\n                        if (!_.isUndefined(property.key) && !_.isUndefined(property.value) && property.key.type == \"Identifier\") {\n                                if (property.value.type === \"Literal\" || property.value.type === \"Identifier\") {\n                                        if (property.key.name == \"url\") {\n                                                url = property.value.value;\n                                                var temp = node.rootParent.split(\"/\");\n                                                if (temp.length > 0) {\n                                                        temp = temp.slice(0, temp.length - 2).join(\"/\");\n                                                }\n\n                                                // console.log(\"proerty.value.value\",property.value.value);\n\n\n                                                url = parsersHelper.correctPathSync(property.value.value, { folder: temp });\n\n                                                //console.log(\"url\",url);\n                                        }\n                                }\n                        }\n                        cbRel();\n                }, function () {\n                        cb(url);\n                });\n        }\n};\n\n"]}