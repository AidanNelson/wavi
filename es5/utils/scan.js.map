{"version":3,"sources":["../../src/utils/scan.js"],"names":["async","require","fs","_","url","path","module","exports","scan","dir","suffix","include_node_modules","callback","readdir","err","files","returnFiles","isUndefined","each","file","next","filePath","stat","isDirectory","results","concat","isFile","indexOf","contains","split","pop","toLowerCase","substring","push","length"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AAAA,IACCC,KAAKD,QAAQ,IAAR,CADN;AAAA,IAEEE,IAAIF,QAAQ,YAAR,EAAsBE,CAF5B;AAAA,IAGEC,MAAMH,QAAQ,KAAR,CAHR;AAAA,IAIII,OAAOJ,QAAQ,MAAR,CAJX;;AAMAK,OAAOC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,oBAA3B,EAAiDC,QAAjD,EAA2D;AAC1EV,KAAGW,OAAH,CAAWJ,GAAX,EAAgB,UAASK,GAAT,EAAcC,KAAd,EAAqB;AACnC,QAAIC,cAAc,EAAlB;AACE,QAAGb,EAAEc,WAAF,CAAcF,KAAd,KAAwB,KAA3B,EAAiC;AAC/Bf,YAAMkB,IAAN,CAAWH,KAAX,EAAkB,UAASI,IAAT,EAAeC,IAAf,EAAqB;AACrC,YAAIC,WAAWZ,MAAM,GAAN,GAAYU,IAA3B;AACAjB,WAAGoB,IAAH,CAAQD,QAAR,EAAkB,UAASP,GAAT,EAAcQ,IAAd,EAAoB;AACpC,cAAIR,GAAJ,EAAS;AACP,mBAAOM,KAAKN,GAAL,CAAP;AACD;AACD,cAAIQ,KAAKC,WAAL,EAAJ,EAAwB;AACtB,gBAAGZ,wBAAwB,KAAxB,IAAiCQ,QAAQ,cAA5C,EAA2D;AACzDC;AACD,aAFD,MAGI;AACFZ,mBAAKa,QAAL,EAAeX,MAAf,EAAuBC,oBAAvB,EAA6C,UAASG,GAAT,EAAcU,OAAd,EAAuB;AAClE,oBAAIV,GAAJ,EAAS;AACP,yBAAOM,KAAKN,GAAL,CAAP;AACD;AACDE,8BAAcA,YAAYS,MAAZ,CAAmBD,OAAnB,CAAd;AACAJ;AACD,eAND;AAOD;AACF,WAbD,MAcK,IAAIE,KAAKI,MAAL,EAAJ,EAAmB;AACtB,gBAAG,OAAOhB,MAAP,KAAkB,QAArB,EAA8B;AAC5B,kBAAGS,KAAKQ,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAxB,EAA0B;AACxB,oBAAGxB,EAAEyB,QAAF,CAAWlB,MAAX,EAAmBS,KAAKU,KAAL,CAAW,GAAX,EAAgBC,GAAhB,GAAsBC,WAAtB,EAAnB,CAAH,EAA2D;AACzD,sBAAGV,SAASW,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,KAA4B,IAA/B,EAAoC;AAClCX,+BAAWA,SAASW,SAAT,CAAmB,CAAnB,CAAX;AACD;AACDhB,8BAAYiB,IAAZ,CAAiBZ,QAAjB;AACD;AACF;AACF,aATD,MAUI;AACF,kBAAIF,KAAKQ,OAAL,CAAajB,MAAb,EAAqBS,KAAKe,MAAL,GAAcxB,OAAOwB,MAA1C,MAAsD,CAAC,CAA3D,EAA8D;AAC5D,oBAAGb,SAASW,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,KAA4B,IAA/B,EAAoC;AAClCX,6BAAWA,SAASW,SAAT,CAAmB,CAAnB,CAAX;AACD;AACDhB,4BAAYiB,IAAZ,CAAiBZ,QAAjB;AACD;AACF;AACDD;AACD;AACA,SAvCH;AAwCD,OA1CD,EA0CG,UAASN,GAAT,EAAc;AACfF,iBAASE,GAAT,EAAcE,WAAd;AACD,OA5CD;AA6CD,KA9CD,MA+CI;AACFJ,eAAS,IAAT,EAAe,EAAf;AACD;AACJ,GApDD;AAqDD,CAtDD","file":"scan.js","sourcesContent":["var async = require(\"async\"),\n\tfs = require(\"fs\"),\n  _ = require('underscore')._,\n  url = require(\"url\"),\n    path = require(\"path\");\n\nmodule.exports = function scan(dir, suffix, include_node_modules, callback) {\n  fs.readdir(dir, function(err, files) {\n    var returnFiles = [];\n      if(_.isUndefined(files) == false){\n        async.each(files, function(file, next) {\n          var filePath = dir + '/' + file;\n          fs.stat(filePath, function(err, stat) {\n            if (err) {\n              return next(err);\n            }\n            if (stat.isDirectory()) {\n              if(include_node_modules == false && file == \"node_modules\"){\n                next();\n              }\n              else{\n                scan(filePath, suffix, include_node_modules, function(err, results) {\n                  if (err) {\n                    return next(err);\n                  }\n                  returnFiles = returnFiles.concat(results);\n                  next();\n                })\n              }\n            }\n            else if (stat.isFile()) {\n              if(typeof suffix !== 'string'){\n                if(file.indexOf(\".\") > -1){\n                  if(_.contains(suffix, file.split(\".\").pop().toLowerCase())){\n                    if(filePath.substring(0, 2) == \"./\"){\n                      filePath = filePath.substring(2);\n                    }\n                    returnFiles.push(filePath);\n                  }\n                }\n              }\n              else{\n                if (file.indexOf(suffix, file.length - suffix.length) !== -1) {\n                  if(filePath.substring(0, 2) == \"./\"){\n                    filePath = filePath.substring(2);\n                  }\n                  returnFiles.push(filePath);\n                }\n              }\n              next();\n            }\n            });\n        }, function(err) {\n          callback(err, returnFiles);\n        });\n      }\n      else{\n        callback(null, \"\"); \n      }\n  });\n};"]}