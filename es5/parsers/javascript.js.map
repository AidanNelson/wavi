{"version":3,"sources":["../../src/parsers/javascript.js"],"names":["utils","require","cheerio","_","db","estraverse","esrecurse","escope","assignmentExpression","initStatement","umd","acorn","parsersHelper","instance","path","Javascript","file","Promise","resolve","reject","then","read","parseAST","findJsElements","catch","console","log","error","result","data","ast","parse_dammit","locations","sourceType","ecmaVersion","ranges","scopeManager","analyze","acquire","e","allScopes","scopes","fileInfo","findWhere","getIdentifiedFiles","name","classId","id","checkImports","each","curScope","key","upper","type","scopeName","block","body","length","expression","fill","addClass","cluster","isUndefined","addRelations","from","to","relationship","curClassId","traverse","enter","node","parent","test","params","rawValue","param","push","join","childScopes","addMethod","value","visibility","removeSpecialChar","setClass","getLeftName","left","parseResult","parse","kind","addProperty","leave","imports","es6","amd","cjs","imp","source","undefined","sources","correctedPath","correctPathSync","candidate","module","exports"],"mappings":"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","file":"javascript.js","sourcesContent":["var utils = require(\"../utils/utils\");\nvar cheerio = require(\"cheerio\");\nvar _ = require(\"underscore\")._;\nvar db = require(\"../lib/database\");\nvar estraverse = require(\"estraverse\");\nvar esrecurse = require(\"esrecurse\");\nvar escope = require(\"escope\");\nvar assignmentExpression = require(\"./javascript/assignmentExpression\");\nvar initStatement = require(\"./javascript/initStatement\");\nvar umd = require(\"acorn-umd\");\nvar acorn = require(\"acorn/dist/acorn_loose\");\nvar parsersHelper = require(\"../utils/parsersHelper\");\nlet instance = null;\n\nvar path = require(\"path\");\n\nclass Javascript {\n  constructor() {\n    if (!instance) {\n      instance = this;\n    }\n\n    return instance;\n  }\n\n  operation(file) {\n    return new Promise(function(resolve, reject) {\n      Promise.resolve(file)\n        .then(utils.read)\n        .then(instance.parseAST)\n        .then(instance.findJsElements)\n        .catch(error => {\n          console.log(\"err\", error);\n        })\n        .then(function() {\n          resolve();\n        });\n    });\n  }\n\n  parseAST(result) {\n    return new Promise(function(resolve, reject) {\n      let path = result[0];\n      let data = result[1];\n      let ast = acorn.parse_dammit(data, {\n        locations: true,\n        sourceType: \"module\",\n        ecmaVersion: 6,\n        ranges: false\n      });\n\n      resolve([path, ast]);\n    });\n  }\n\n  getScope(result) {\n    return new Promise(function(resolve, reject) {\n      let ast = result[1];\n      try {\n        let scopeManager = escope.analyze(ast, {\n          sourceType: \"module\",\n          ecmaVersion: 6\n        });\n\n        result[1] = scopeManager.acquire(ast);\n        resolve(result);\n      } catch (e) {\n        reject(\"Bad Scope\");\n      }\n    });\n  }\n\n  findJsElements(result) {\n    return new Promise(function(resolve, reject) {\n      let path = result[0];\n      let ast = result[1];\n      let scopeManager = escope.analyze(ast, {\n        sourceType: \"module\",\n        ecmaVersion: 6\n      });\n      let allScopes = scopeManager.scopes;\n      //let classId = db.addClass({name:path});\n\n      let fileInfo = _.findWhere(db.getIdentifiedFiles(), { name: path });\n\n      let classId = fileInfo.id;\n      instance.checkImports(ast, fileInfo);\n\n      _.each(allScopes, function(curScope, key) {\n        if (curScope.upper === null || curScope.type === \"module\") {\n          // curScope.id = classId;\n        } else if (\n          curScope.upper.type === \"function-expression-name\" &&\n          curScope.type === \"function\"\n        ) {\n          //   else if (curScope.childScopes.length === 0) {\n          //curScope.type !== \"function\" &&\n          //  }\n        } else {\n          let scopeName = curScope.type;\n          if (\n            curScope.type === \"block\" &&\n            curScope.block &&\n            curScope.block.body &&\n            curScope.block.body.length > 0\n          ) {\n            scopeName = curScope.block.body[0].type;\n\n            if (curScope.block.body[0].type === \"ExpressionStatement\") {\n              scopeName = curScope.block.body[0].expression.type;\n            }\n          } else if (\n            curScope.block &&\n            curScope.block.id &&\n            curScope.block.id.name !== null\n          ) {\n            scopeName = curScope.block.id.name;\n          }\n\n          if (curScope.upper.upper.type === \"function-expression-name\") {\n            curScope.upper = curScope.upper.upper;\n          }\n\n          let fill = \"lightblue\";\n\n          if (curScope.type !== \"function\") {\n            fill = \"khaki\";\n          }\n\n          curScope.id = db.addClass({\n            name: scopeName,\n            fill: fill,\n            type: curScope.type,\n            file: path,\n            cluster: fileInfo.cluster\n          });\n\n          if (\n            !_.isUndefined(curScope.upper.id) &&\n            curScope.upper !== null &&\n            curScope.type !== \"module\"\n          ) {\n            db.addRelations({\n              from: curScope.upper.id,\n              to: curScope.id,\n              relationship: \"composition\"\n            });\n          }\n        }\n      });\n\n      let curClassId = classId;\n      estraverse.traverse(ast, {\n        enter: function(node, parent) {\n          if (/Function/.test(node.type)) {\n            let upper = scopeManager.acquire(node).upper.id;\n            curClassId = scopeManager.acquire(node).id; // get current function scope\n\n            // console.log(node);\n\n            /* if (node.type === \"FunctionDeclaration\") {\n                                                              let e = \"\";\n                                                              var rawValue = [];\n                                                              _.each(node.params, function (param) {\n                                                                  if (param.type === \"Identifier\" && !_.isUndefined(param.name)) {\n                                                                      rawValue.push(param.name);\n                                                                  }\n                                                              });\n                                                              if (rawValue.length > 0) {\n                                                                  params = rawValue.join();\n                                                              }\n                                                              db.addMethod(upper, { name: node.id.name + \"(\" + params + \")\", type: \"\", visibility: \"public\" });\n                                                          }*/\n\n            // console.log(scopeManager.acquire(node));\n\n            if (node.type === \"FunctionDeclaration\") {\n              let params = \"\";\n              var rawValue = [];\n              _.each(node.params, function(param) {\n                if (param.type === \"Identifier\" && !_.isUndefined(param.name)) {\n                  rawValue.push(param.name);\n                }\n              });\n              if (rawValue.length > 0) {\n                params = rawValue.join();\n              }\n\n              if (scopeManager.acquire(node).childScopes === 0) {\n                db.addMethod(upper, {\n                  name: node.id.name,\n                  value: params,\n                  type: \"\",\n                  visibility: \"public\"\n                });\n              } else {\n                params = parsersHelper.removeSpecialChar(params);\n                db.setClass(curClassId, {\n                  name: node.id.name + \"(\" + params + \")\"\n                });\n              }\n            } else if (node.type === \"FunctionExpression\") {\n              // console.log(node.id.name);\n              let name = \"\";\n              if (parent.type === \"VariableDeclarator\") {\n                name = parent.id.name;\n              } else if (node.id !== null) {\n                name = node.id.name;\n              } else if (parent.type === \"AssignmentExpression\") {\n                name = parsersHelper.removeSpecialChar(\n                  parsersHelper.getLeftName(parent.left)\n                );\n              }\n\n              let params = \"\";\n              var rawValue = [];\n              _.each(node.params, function(param) {\n                if (param.type === \"Identifier\" && !_.isUndefined(param.name)) {\n                  rawValue.push(param.name);\n                }\n              });\n\n              if (rawValue.length > 0) {\n                params = rawValue.join();\n              }\n\n              if (name === \"\" && parent.key && parent.key.name) {\n                name = parent.key.name;\n              }\n\n              params = parsersHelper.removeSpecialChar(params);\n              db.setClass(curClassId, { name: name + \"(\" + params + \")\" });\n            }\n          } else if (\n            node.type === \"VariableDeclarator\" &&\n            node.id &&\n            node.id.type === \"Identifier\"\n          ) {\n            var parseResult = initStatement.parse(node);\n            if (parseResult.kind === \"property\") {\n              db.addProperty(curClassId, parseResult);\n            } else {\n              db.addMethod(curClassId, parseResult);\n            }\n          } else if (node.type === \"AssignmentExpression\") {\n            var parseResult = assignmentExpression.parse(node);\n            if (parseResult.kind === \"property\") {\n              db.addProperty(curClassId, parseResult);\n            } else {\n              db.addMethod(curClassId, parseResult);\n            }\n          }\n\n          /*else if (node.type === \"ClassDeclaration\") {\n                                                        db.addProperty(curClassId, parseResult);\n                                                }*/\n        },\n        leave: function(node, parent) {}\n      });\n\n      resolve(ast);\n    });\n  }\n\n  checkImports(ast, parent) {\n    return new Promise(function(resolve, reject) {\n      var imports = umd(ast, { es6: true, amd: true, cjs: true });\n\n      _.each(imports, function(imp) {\n        if (imp.source && imp.source.length === undefined) {\n          imp.source = [imp.source];\n        } else {\n          imp.source = imp.sources;\n        }\n\n        _.each(imp.source, function(source) {\n          if (!_.isUndefined(source) && source.type === \"Literal\") {\n            let correctedPath = utils.correctPathSync(\n              source.value,\n              parent.name,\n              \".js\"\n            );\n\n            // Find correspondance\n            let candidate = _.findWhere(db.getIdentifiedFiles(), {\n              name: correctedPath\n            });\n\n            if (candidate !== undefined) {\n              // Create Relation\n              db.addRelations({\n                from: parent.id,\n                to: candidate.id,\n                relationship: \"generalization\",\n                cluster: true\n              });\n            }\n          }\n        });\n      });\n      resolve();\n      //reject();\n    });\n  }\n}\n\nmodule.exports = new Javascript();\n"]}