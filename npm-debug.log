0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'publish' ]
2 info using npm@3.5.2
3 info using node@v4.2.6
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/joanna/git/wavi',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/joanna/.npm/wavi/2.0.6/package.tgz not in flight; packing
9 info lifecycle wavi@2.0.6~prepublish: wavi@2.0.6
10 silly lifecycle wavi@2.0.6~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/home/joanna/.npm/wavi/2.0.6/package.tgz',
11 verbose tar pack   '/home/joanna/git/wavi' ]
12 verbose tarball /home/joanna/.npm/wavi/2.0.6/package.tgz
13 verbose folder /home/joanna/git/wavi
14 verbose addLocalTarball adding from inside cache /home/joanna/.npm/wavi/2.0.6/package.tgz
15 silly cache afterAdd wavi@2.0.6
16 verbose afterAdd /home/joanna/.npm/wavi/2.0.6/package/package.json not in flight; writing
17 verbose afterAdd /home/joanna/.npm/wavi/2.0.6/package/package.json written
18 silly publish { name: 'wavi',
18 silly publish   version: '2.0.6',
18 silly publish   description: 'Generate a class diagram for node.js web application inspired by the Web Application Extension (WAE) for UML. Document your application with wavi.',
18 silly publish   main: 'index.js',
18 silly publish   url: 'https://github.com/bakunin95/wavi',
18 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/bakunin95/wavi.git' },
18 silly publish   author: { name: 'bakunin95' },
18 silly publish   email: 'jugle66@hotmail.com',
18 silly publish   licenses: [ { type: 'MIT' } ],
18 silly publish   dependencies:
18 silly publish    { acorn: '^4.0.4',
18 silly publish      'acorn-umd': '^0.4.0',
18 silly publish      async: '^2.1.4',
18 silly publish      cheerio: '^0.22.0',
18 silly publish      co: '^4.6.0',
18 silly publish      css: '^2.2.1',
18 silly publish      escope: '^3.6.0',
18 silly publish      esrecurse: '^4.1.0',
18 silly publish      estraverse: '^4.2.0',
18 silly publish      fs: '0.0.2',
18 silly publish      mkdirp: '^0.5.1',
18 silly publish      path: '^0.12.7',
18 silly publish      underscore: '^1.8.3' },
18 silly publish   devDependencies:
18 silly publish    { 'babel-cli': '^6.7.5',
18 silly publish      'babel-preset-es2015': '^6.6.0',
18 silly publish      'babel-preset-stage-2': '^6.5.0' },
18 silly publish   bin: { wavi: 'bin/wavi' },
18 silly publish   readme: '##WAVI Web Application Viewer 2.0 (Node.js)\n\nGenerate a class diagram for your node.js web application.\n\nWAVI is intended for developers who wish to document their web application or as a reverse engineering tool to recover \nthe structure of a web application.\n\nWeb applications pose unique challenges when it comes to understanding and maintaining their heterogeneous structures, which often involve complex interactions between elements from different languages. Accurate and up-to-date documentation is rarely available and this calls for the proposal of reverse engineering approaches for the recovery and representation of such structures. The proposed package presents our ongoing work on Web Application Viewer (WAVI), a tool able to reverse engineer a web application\'s structure.\n\n\n## Installation\n\nInstall WAVI package using npm.\n\n    $ npm install wavi -g\n\n\n## Usage in your terminal (CLI): \n\nThe first argument is the path to the website to be analyzed and the second argument is the path where the svg graph will be generated.\n\nwavi path/to/website path/to/resultfile/graph.svg\n\nExample:\n\n```\nwavi website/example result/example.svg\n\n```\n\n\n## Example:\n\n![Example](/example/graph.jpg?raw=true "Example")\n\n\n[More at the wavi blog](https://blogwavi.wordpress.com/)\n\n\n##Contributions\n\nThis is a pproject to help developers generate quality class diagram. WAVI is in development and all contributions are welcomed.\nFor more info on the project contact me at jugle66@hotmail.com\n\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2014 Bakunin95\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '69e2a3bbf04b7dbc7b62f94498aa2a69b2d10a04',
18 silly publish   bugs: { url: 'https://github.com/bakunin95/wavi/issues' },
18 silly publish   homepage: 'https://github.com/bakunin95/wavi#readme',
18 silly publish   _id: 'wavi@2.0.6',
18 silly publish   _shasum: 'cc550d502c8950bd67e3646e811711521cb33f72',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name wavi
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/wavi
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /home/joanna/.npm/wavi/2.0.6/package.tgz
26 verbose stack Error: auth required for publishing
26 verbose stack     at CachingRegistryClient.publish (/usr/share/npm/node_modules/npm-registry-client/lib/publish.js:30:14)
26 verbose stack     at /usr/share/npm/lib/publish.js:137:14
26 verbose stack     at mapToRegistry (/usr/share/npm/lib/utils/map-to-registry.js:55:3)
26 verbose stack     at publish_ (/usr/share/npm/lib/publish.js:106:3)
26 verbose stack     at Array.<anonymous> (/usr/share/npm/node_modules/slide/lib/bind-actor.js:15:8)
26 verbose stack     at LOOP (/usr/share/npm/node_modules/slide/lib/chain.js:15:14)
26 verbose stack     at LOOP (/usr/share/npm/node_modules/slide/lib/chain.js:14:28)
26 verbose stack     at chain (/usr/share/npm/node_modules/slide/lib/chain.js:20:5)
26 verbose stack     at /usr/share/npm/lib/publish.js:72:5
26 verbose stack     at RES (/usr/share/npm/node_modules/inflight/inflight.js:23:14)
27 verbose cwd /home/joanna/git/wavi
28 error Linux 4.1.19-v7+
29 error argv "/usr/bin/nodejs" "/usr/bin/npm" "publish"
30 error node v4.2.6
31 error npm  v3.5.2
32 error code ENEEDAUTH
33 error need auth auth required for publishing
34 error need auth You need to authorize this machine using `npm adduser`
35 verbose exit [ 1, true ]
